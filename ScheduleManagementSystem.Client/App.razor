@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using System.Net.Http.Headers

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <NotAuthorized>
                @if (context.User.Identity?.IsAuthenticated != true)
                {
                    <RedirectToLogin />
                }
                else
                {
                    <p class="alert alert-danger">You are not authorized to access this resource.</p>
                }
            </NotAuthorized>
            <Authorizing>
                <div class="loading-indicator">
                    <p>Authorizing...</p>
                </div>
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-body text-center">
                                <h1 class="my-4">Page Not Found</h1>
                                <p>Sorry, the page you're looking for doesn't exist.</p>
                                <a href="/" class="btn btn-primary mt-3">Return to Home</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </LayoutView>
    </NotFound>
</Router>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}